import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import java.util.HashMap;
import java.util.Map;
 
public class DumyValues extends HttpServlet {
    private static final Map<String, String> authorizedPerson = new HashMap<>();
    private static final Map<String, String> records = new HashMap<>();
 
    static {
        authorizedPerson.put("record1", "user1");
        authorizedPerson.put("record2", "user2");
        authorizedPerson.put("record3", "user1");
        
        records.put("record1", "AAABBB");
        records.put("record2", "BBBCCC");
        records.put("record3", "CCCDDD");
    }
 
    private boolean owner(String userId, String recordId) {
        return userId.equals(authorizedPerson.get(recordId));
    }
 
    private void updateRecord(String recordId, String newContent) {
        if (records.containsKey(recordId)) {
            records.put(recordId, newContent);
            System.out.println("Record updated: " + recordId + " -> " + newContent);
        } else {
            System.out.println("Record not found: " + recordId);
        }
    }
 
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String recordId = request.getParameter("recordId");
        String newContent = request.getParameter("newContent");

        HttpSession session = request.getSession(false);
        if (session != null || owner((String) session.getAttribute("userId"), recordId)) {
            // ok: pattern-not-inside
             updateRecord(recordId, newContent);
             response.getWriter().println("Record updated successfully.");
        }
        // ruleid: pattern-not-inside
        updateRecord(recordId, newContent);
        response.getWriter().println("Record updated successfully.");
    }
}
